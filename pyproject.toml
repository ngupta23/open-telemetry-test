[project]
name = "open-telemetry-test"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "flask>=3.1.0",
    "nixtla>=0.6.6",
    "numpy",
    "opentelemetry-distro>=0.53b1",
    "opentelemetry-exporter-otlp>=1.32.1",
    "pip>=25.0.1",
    "python-dotenv>=1.1.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-rerunfailures>=15.0",
    "pytest-split>=0.10.0",
]

[build-system]
requires = ["setuptools >= 61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["open_telemetry_test"]

[tool.coverage]
branch = true
source = ["open_telemetry_test"]

[tool.coverage.run]
omit = [
    "tests/*"
]

[tool.coverage.report]
fail_under = 80
show_missing = true

[tool.pytest.ini_options]
testpaths = ["tests"]

# Reruns = 10, with delay = 5 seconds between each rerun (for flaky tests)
# Fail if coverage is less than 0% for each split since  we are using a global
# coverage of 80% above
addopts = """
  --reruns 10
  --reruns-delay 5
  -v
  --durations=0
  --cov
  --cov-report=term
  --cov-report=
  --cov-fail-under=0
"""

[tool.ruff]
fix = true
line-length = 88
src = ["open_telemetry_test"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 20

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I"]

[tool.ruff.lint.isort]
known-local-folder = ["open_telemetry_test"]
no-lines-before = ["local-folder"]
